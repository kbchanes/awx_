---
# - name: ssh-test
#   become: yes
#   hosts: bastion
#   tasks:
#   - name: SSH-KEY Copy1
#     command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@15.165.115.16
    
#   - name: SSH-KEY Copy2
#     command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@3.34.143.51
    
#   - name: SSH-KEY Copy2
#     command: sshpass -p toor ssh-copy-id -i /home/centos/awx_bastion.pem -o StrictHostKeyChecking=no root@3.34.143.51
- name: ssh-test
  become: yes
  hosts: bastion
  tasks:
#   - name: ssh-keygen
#     command : ssh-keygen -q -b 2048 -t rsa -N "" -f ~/.ssh/id_rsa
#     ignore_errors: yes
#     run_once: true
  
#   - name: install sshpass
#     yum:
#       name: sshpass
#       state: present
  - name: SSH-KEY Copy3
    command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@192.168.122.176
  
  - name: ssh-key copy4
    command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no okd.cccr3.com
  
 #   setup:
    set_fact:
      bastion_ip: "{{ ansible_eth0.ipv4.address }}"
      bastion_fqdn: "{{ ansible_fqdn }}"
      
  #  setup:
    delegate_to: okd
    set_fact:
      okd_ip: "{{ ansible_eth0.ipv4.address }}"
      okd_fqdn: "{{ ansible_fqdn }}"

  - name: template hosts file
    template:
      src: ~/hosts.j2
      dest: /etc/hosts 
#   - name: Host file setting
#     lineinfile:
#       path: /etc/hosts
#       line: "{{ item }}"
#     with_items:
#       - "\n"
#       - 192.168.122.176 ns.cccr3.com
#       - 192.168.122.139 okd.cccr3.com
  
  - name: epel-release, bind, net-tools install
    yum:
      name: epel-release
      state: present
      
  - name: install bind
    yum:
      name: bind
      state: present
      
  - name: install net-tools
    yum:
      name: net-tools
      state: present  
    
  
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: "^BOOTPROTO="
      line: BOOTPROTO="static"
      
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: "{{ item }}"
    with_items:
      - "IPADDR=192.168.122.176"
      - "NETMASK=255.255.255.0"
      - "GATEWAY=192.168.122.1"
      - "DNS1=192.168.122.176"
      - "DNS2=8.8.8.8"
     # backrefs: yes
  
  - name: Add sysctl.conf
    lineinfile:
      path: /etc/sysctl.conf
      line: "net.ipv4.ip_forward=1"
      
  - name: Network service Restart
    service:
      name: network
      state: restarted
      
  - name: Bastion replace DNS1
    replace:
      path: /etc/named.conf
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    with_items:
      - { regexp: "({ 127.0.0.1; };)$", replace: "{ any; };" }
      - { regexp: "({ ::1; };)$", replace: "{ any; };" }
      - { regexp: "({ localhost; };)$", replace: "{ any; };" }
      
  - name: Bastion replace DNS2
    lineinfile:
      path: /etc/named.rfc1912.zones
      line: "{{ item }}"
    with_items:
      - "zone \"cccr3.com\" IN {"
      - " type master;"
      - " file \"cccr3.com.zone\";"
      - " allow-update { none; };"
      - "}; "

  - name: Create zone file
    lineinfile:
      path: /var/named/cccr3.com.zone
      create: yes
      line: "{{ item }}"
    with_items:
      - "$TTL 3H"
      - "@ IN SOA ns.cccr3.com. root.cccr3.com. ( "
      - " 0 ; serial"
      - " 1D ; refresh"
      - " 1H ; retry"
      - " 1W ; expire"
      - " 3H ) ; minimum"
      - "\n"
      - " IN NS ns.cccr3.com."
      - "ns IN A 192.168.122.176"
      - "okd IN A 192.168.122.139"
      
  - name: Start to Named Service
    service:
      name: named
      state: started
      enabled: yes
        
  - name: 53 Port enabled
    firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
    with_items:
      - "53/tcp"
      - "53/udp"

#   - name: Setting to DNS
#     nmcli:
#       ifname: eth0
#       type: ethernet
#       conn_name: eth0

#       gw4: 192.168.122.1
#       state: present
    
  - name: DNS Setting
    lineinfile:
      path: /etc/resolv.conf
      regexp: "^nameserver"
      line: "nameserver 192.168.122.176"

  - name: DNS add 8.8.8.8
    lineinfile:
      path: /etc/resolv.conf
      line: "nameserver 8.8.8.8"
    
  - name: Start to NetworkManager Service
    service:
      name: NetworkManager
      state: restarted


- name: Master
  become: yes
  hosts: okd
  tasks:
  - name: package install
    yum:
      name: bind
      state: present
      
    yum:
      name: epel-release
      state: present  
    
    yum:
      name: net-tools
      state: present  
    
    yum:
      name: NetworkManager
      state: present  
    
    yum:
      name: firewalld
      state: present
  
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: "^BOOTPROTO="
      line: BOOTPROTO="static"
      
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: "{{ item }}"
    with_items:
      - "IPADDR=192.168.122.139"
      - "NETMASK=255.255.255.0"
      - "GATEWAY=192.168.122.1"
      - "DNS1=192.168.122.176"
      - "DNS2=8.8.8.8"
  
#   - name: Host file setting
#     lineinfile:
#       path: /etc/hosts
#       line: "{{ item }}"
#     with_items:
#       - "\n"
#       - "192.168.122.145 ns.cccr3.com"
#       - "192.168.122.244 okd.cccr3.com" 

  - name: Master replace DNS1
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: "{{ item }}"
    with_items:
      - "NM_CONTROLLED=yes"
      - "PEERDNS=yes"
      - "DNS1=192.168.122.176"
      - "DNS2=8.8.8.8"
    
  - name: DNS setting
    lineinfile:
      path: /etc/resolv.conf
      regexp: "^nameserver"
      line: "nameserver 192.168.122.176"
         
  - name: DNS add 8.8.8.8
    lineinfile:
      path: /etc/resolv.conf
      line: "nameserver 8.8.8.8"
    
  - name: Start to NetworkManager Service
    service:
      name: NetworkManager
      state: restarted

  - name: Add sysctl.conf
    lineinfile:
      path: /etc/sysctl.conf
      line: "net.ipv4.ip_forward=1"

  - name: Start to Network Service
    service:
      name: network
      state: restarted
  
  
- name:  OKD3.11 install 
  become: yes
  hosts: bastion
  tasks:
  - name: SSH-KEY Copy4
    command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no okd.cccr3.com
  
  - name: openshift-release install
    yum:
      name: centos-release-openshift-origin311.noarch
      state: present
      
  - name: command
    command:
      cmd: yum repolist
      
  - name: openshift-ansible install
    yum:
      name: openshift-ansible
      state: present

  - name: ansible install
    yum:
      name: ansible
      state: present
      
  - name: python-pip install
    yum:
      name: python-pip
      state: present
      
  - name: pip insatll ansible
    pip:
      name: ansible==2.6.20

  - name: Write inventory code
    blockinfile:
      path: /usr/share/ansible/openshift-ansible/inventory/hosts.localhost
      create: yes
      block: |
        [OSEv3:children]
        masters
        nodes
        etcd
        
        [OSEv3:vars]
        os_firewall_use_firewalld=true
        openshift_pkg_version=-3.11.*
        openshift_deployment_type=origin
        openshift_portal_net=172.30.0.0/16
        openshift_disable_check=disk_availability,memory_availability,docker_image_availability
        
        openshift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true']}]

        openshift_master_default_subdomain=okd.cccr3.com
        
        openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

        debug_level=6

        ansible_ssh_user=root

        ansible_become=true

        openshift_cockpit_deployer_image='docker.io/timbordemann/cockpit-kubernetes:latest'

        [masters]
        okd.cccr3.com openshift_schedulable=true
        [etcd]
        okd.cccr3.com
        [nodes]
        okd.cccr3.com openshift_node_group_name='node-config-all-in-one'
  
  - name: ansible-playbook deploy1
    command: ansible-playbook -i /usr/share/ansible/openshift-ansible/inventory/hosts.localhost /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml
    
#   - name: ansible-playbook deploy2
#     command: ansible-playbook -i /usr/share/ansible/openshift-ansible/inventory/hosts.localhost /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
