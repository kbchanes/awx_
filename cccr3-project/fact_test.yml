---
- name: ssh-test
  become: yes
  hosts: bastion
  vars_file: vars.yml
  tasks:
#   - name: ssh-keygen
#     command : ssh-keygen -q -b 2048 -t rsa -N "" -f ~/.ssh/id_rsa -y
#     ignore_errors: yes
#     run_once: true
    
#   - name: SSH-KEY Copy3
#     command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no localhost
    
#   - name: ssh-key copy4
#     command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@192.168.122.139
  - name: Set a hostname
    delegate_to: okd
    hostname:
      name: "{{ okd['hostname'] }}"

  - name: Set a hostname
    hostname:
      name: "{{ bastion['hostname'] }}"
    
  - name: Bastion IP in variable
    set_fact:
      bastion_ip: "{{ ansible_eth0['ipv4']['address'] }}"

  - name: OKD delegate
    setup:
    delegate_to: okd
  - name: OKD IP in variable
    set_fact:
      okd_ip: "{{ ansible_eth0['ipv4']['address'] }}"

  - name: template hosts file
    template:
      src: hosts.j2
      dest: /etc/hosts 

  - name: epel-release, bind, net-tools install
    yum:
      name:
        - epel-release
        - bind
        - net-tools
      state: present
    
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: "^BOOTPROTO="
      line: BOOTPROTO={{ type }}
    
  - name: Static IP setting
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: "{{ item }}"
    with_items:
      - IPADDR={{ bastion_ip }}
      - NETMASK={{ ansible_eth0['ipv4']['netmask'] }}
      - GATEWAY={{ ansible_default_ipv4['gateway'] }}
      - DNS1={{ bastion_ip }}
      - DNS2={{ bastion['network']['dns2'] }}
     # backrefs: yes
  
  - name: Packet forwarding
    lineinfile:
      path: /etc/sysctl.conf
      line: "{{ packet_forward }}"
      
  - name: Network service Restart
    service:
      name: network
      state: restarted
    
  - name: Bastion replace DNS1
    replace:
      path: /etc/named.conf
      regexp: "{{ item['regexp'] }}"
      replace: "{{ item['replace'] }}"
    with_items:
      - { regexp: "({ 127.0.0.1; };)$", replace: "{ any; };" }
      - { regexp: "({ ::1; };)$", replace: "{ any; };" }
      - { regexp: "({ localhost; };)$", replace: "{ any; };" }
    
  - name: Temaplate zone file
    template:
      src: cccr3.com.zone.j2
      dest: /var/named/cccr3.com.zone
      
  - name: Start to Named Service
    service:
      name: named
      state: started
      enabled: yes
        
  - name: 53 Port enabled
    firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
    with_items:
      - "{{ bastion['port'] }}/tcp"
      - "{{ bastion['port'] }}/udp"
    
#   - name: Template DNS
#     template:
#       src: resolv.conf.j2
#       dest: /etc/resolv.conf
      
  - name: Start to NetworkManager Service
    service:
      name: NetworkManager
      state: restarted
 
